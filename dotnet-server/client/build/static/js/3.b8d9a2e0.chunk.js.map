{"version":3,"sources":["components/applicationsViews/AllowList.js","api/applicationsApi.js","components/UseForm.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Button.js","components/Controls.js"],"names":["useStyles","makeStyles","theme","root","width","height","display","justifyContent","alignItems","paper","background","initialFValues","macAddress","location","vlan","AllowList","classes","useState","setLocationOptions","useEffect","a","apis","getLocationOptions","options","useForm","values","handleInputChange","resetForm","handleSubmit","e","preventDefault","CONFIG","locationOptions","find","option","id","title","vlanOptions","window","alert","className","elevation","onSubmit","style","backgroundColor","container","spacing","direction","justify","item","xs","Input","name","label","value","onChange","Select","Button","type","text","onClick","getBitLockerPassword","input","Promise","resolve","reject","axios","get","params","then","res","catch","err","getLapsPassword","computerName","updateVlan","post","mac","data","searchUsers","userPrefix","getUserStatus","samAccountName","resetPassword","userId","console","log","setValues","target","marginTop","position","Form","props","other","children","autoComplete","createMuiTheme","palette","primary","teal","margin","GreenRadio","withStyles","color","checked","Radio","required","textTransform","Controls","ThemeProvider","TextField","variant","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","control","minWidth","InputLabel","MenuItem","size"],"mappings":"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","file":"static/js/3.b8d9a2e0.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Controls from '../Controls';\r\nimport { Grid, } from '@material-ui/core';\r\nimport { useForm, Form } from '../UseForm';\r\n\r\nimport CONFIG from '../../config.json';\r\nimport apis from '../../api/applicationsApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    paper: {\r\n        width: \"70%\",\r\n        height: \"70%\",\r\n        background: 'linear-gradient( #e6e6e6 90%, teal 10%)'\r\n\r\n    },\r\n}));\r\n\r\nconst initialFValues = {\r\n    macAddress: '',\r\n    location: '',\r\n    vlan: '',\r\n}\r\n\r\nfunction AllowList() {\r\n    const classes = useStyles();\r\n    const [locationOptions, setLocationOptions] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const options = await apis.getLocationOptions();\r\n        setLocationOptions(options);\r\n    }, []);\r\n\r\n    const {\r\n        values,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let location, vlan;\r\n        \r\n        CONFIG.locationOptions.find(option => {\r\n            if (option.id == values.location) {\r\n                location = option.title;\r\n            }\r\n        });\r\n        CONFIG.vlanOptions.find(option => {\r\n            if (option.id == values.vlan) {\r\n                vlan = option.title;\r\n            }\r\n        });\r\n\r\n        // const res = await apis.updateVlan(values.macAddress, location, vlan);\r\n        // window.alert(res.data.message)\r\n        window.alert(\"res.data.message\")\r\n\r\n        resetForm()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper elevation={20} classes={{ root: classes.paper }}>\r\n                <h1>Allow List</h1>\r\n                <Form onSubmit={handleSubmit} style={{ backgroundColor: \"\", }}>\r\n                    <Grid container style={{ backgroundColor: \"\", }}\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\">\r\n                        <Grid item xs={6} style={{ backgroundColor: \"\" }} >\r\n                            <Controls.Input\r\n                                name=\"macAddress\"\r\n                                label=\"כתובת Mac\"\r\n                                value={values.macAddress}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <Controls.Select\r\n                                name=\"location\"\r\n                                label=\"מיקום\"\r\n                                value={values.location}\r\n                                onChange={handleInputChange}\r\n                                options={CONFIG.locationOptions}\r\n                            />\r\n                            <Controls.Select\r\n                                name=\"vlan\"\r\n                                label=\"Vlan\"\r\n                                value={values.vlan}\r\n                                onChange={handleInputChange}\r\n                                options={CONFIG.vlanOptions}\r\n                            />\r\n                            <div>\r\n                                <Controls.Button\r\n                                    type=\"submit\"\r\n                                    text=\"Submit\" />\r\n                                <Controls.Button\r\n                                    text=\"Reset\"\r\n                                    // color=\"default\"\r\n                                    onClick={resetForm} />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllowList\r\n","import axios from \"axios\";\r\nimport { useImperativeHandle } from \"react\";\r\n\r\n\r\nconst getBitLockerPassword = (type, input) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`/api/BitLocker`,\r\n                {\r\n                    params: {\r\n                        type: type, input: input\r\n                    }\r\n                }\r\n            )\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\n\r\nconst getLapsPassword = (computerName) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`/api/Laps`,\r\n                {\r\n                    params: {\r\n                        computerName: computerName\r\n                    }\r\n                }\r\n            )\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\nconst searchUsers = (userPrefix) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`/api/userManagement/search`,\r\n            {\r\n                params: {\r\n                    userPrefix: userPrefix\r\n                }\r\n            })\r\n            .then((res) => {\r\n                resolve(res.data);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\n\r\nconst resetPassword = (userId) => {\r\n    console.log(\"userId=\",userId);\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`/api/userManagement/resetPassword`,\r\n            {\r\n                params: {\r\n                    \"userId\": userId\r\n                }\r\n            })\r\n            .then((res) => {\r\n                resolve(res.data);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\n\r\n\r\nconst getUserStatus = (samAccountName) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`/api/userManagement/userStatus`,\r\n            {\r\n                params: {\r\n                    samAccountName: samAccountName\r\n                }\r\n            })\r\n            .then((res) => {\r\n                resolve(res.data);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\n\r\nconst updateVlan = (macAddress, location, vlan) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .post(`/api/Vlan`,\r\n                {\r\n                    mac: macAddress,\r\n                    location: location,\r\n                    vlan: vlan,\r\n                }\r\n            )\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\n\r\nconst getLocationOptions = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`/api/vlan/locationOptions`)\r\n            .then((res) => {\r\n                resolve(res.data);\r\n            })\r\n            .catch((err) => reject(err));\r\n    });\r\n}\r\n\r\n\r\n\r\nconst apis = {\r\n    getBitLockerPassword,\r\n    getLapsPassword,\r\n    updateVlan,\r\n    getLocationOptions,\r\n    searchUsers,\r\n    getUserStatus,\r\n    resetPassword\r\n\r\n}\r\n\r\nexport default apis;","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues) {\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: \"\",\r\n        height: \"50%\",\r\n        width: \"50%\",    \r\n        marginTop: \"5%\",\r\n        display: \"inline-block\",\r\n        position: \"relative\",\r\n\r\n    }\r\n\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    console.log('props: ', props);\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n};","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport { teal } from '@material-ui/core/colors';\r\nimport {\r\n    ThemeProvider,\r\n    makeStyles,\r\n    createMuiTheme,\r\n} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: teal,\r\n    },\r\n    direction: 'rtl',\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5),\r\n        backgroundColor:\"white\"\r\n    }\r\n}));\r\n\r\nexport default function Input(props) {\r\n    const classes = useStyles();\r\n    const { name, label, value, onChange } = props;\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <TextField\r\n                required\r\n                label={label}\r\n                id=\"mui-theme-provider-outlined-input\"\r\n                value={value}\r\n                onChange={onChange}\r\n                variant=\"outlined\"\r\n                classes={{ root: classes.root }}\r\n                name={name}\r\n            />\r\n        </ThemeProvider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { teal } from '@material-ui/core/colors';\r\n\r\nconst GreenRadio = withStyles({\r\n    root: {\r\n        color: teal[400],\r\n        '&$checked': {\r\n            color: teal[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" required {...props} />);\r\n\r\nexport default function RadioGroup(props) {\r\n\r\n    const { name, label, value, onChange, items } = props;\r\n    console.log('items: ', items);\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <MuiRadioGroup\r\n                row\r\n                required\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        item => (\r\n                            <FormControlLabel key={item.id} value={item.id} control={<GreenRadio />} label={item.title} />\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    )\r\n};","import React from 'react'\r\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\nimport { makeStyles, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport { teal } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(2.5),\r\n        backgroundColor: \"white\"\r\n    },\r\n}))\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: teal,\r\n    },\r\n    direction:\"rtl\"\r\n\r\n\r\n});\r\n\r\nexport default function Select(props) {\r\n    const classes = useStyles();\r\n    const { name, label, value, onChange, options } = props;\r\n    console.log('options', options)\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <FormControl variant=\"outlined\" style={{ minWidth: 120 }} classes={{ root: classes.root}}>\r\n                <InputLabel>{label}</InputLabel>\r\n                <MuiSelect\r\n                    label={label}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}>\r\n                    <MenuItem value=\"\"></MenuItem>\r\n                    {\r\n                        options.map(\r\n                            item => (<MenuItem key={item} value={item}>{item}</MenuItem>)\r\n                        )\r\n                    }\r\n                </MuiSelect>\r\n            </FormControl>\r\n        </ThemeProvider>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport { teal } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(2.5),\r\n        backgroundColor: \"white\"\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    },\r\n}))\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: teal,\r\n    },\r\n\r\n    // textAlign: \"center\",\r\n    // direction: 'rtl',\r\n\r\n});\r\n\r\nexport default function Button(props) {\r\n    const classes = useStyles();\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <MuiButton\r\n                variant=\"outlined\"\r\n                // variant={variant || \"contained\"}\r\n                size={size || \"large\"}\r\n                color={color || \"primary\"}\r\n                onClick={onClick}\r\n                {...other}\r\n                classes={{ root: classes.root, label: classes.label }}>\r\n                {text}\r\n            </MuiButton>\r\n        </ThemeProvider>\r\n\r\n    )\r\n}\r\n","import Input from \"./controls/Input\";\r\nimport RadioGroup from \"./controls/RadioGroup\";\r\nimport Select from \"./controls/Select\";\r\nimport Button from \"./controls/Button\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    RadioGroup,\r\n    Select,\r\n    Button\r\n\r\n}\r\n\r\nexport default Controls;"],"sourceRoot":""}